from contextlib import suppress
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest
from sqlalchemy import update, func

from app.database.data import async_session, User
from app.components.events.week_with_ai.ai_generate import generate
from app.database.requests import get_requests_ai
from app.components.events.week_with_ai.keyboard_ai import kb_ai
from app.components.logs.logs import logger

week_with_ai = Router()


class AiWait(StatesGroup):
    msg = State()
    wait = State()


@week_with_ai.callback_query(F.data == 'week_ai')
async def week_ai_callback(callback: CallbackQuery, state: FSMContext):
    try:
        await callback.message.delete()
    except TelegramBadRequest:
        pass

    request_count = await get_requests_ai(callback.message.chat.id)
    count_init = request_count[0]

    if count_init <= 0:
        await callback.message.answer("ü§ñ <b>–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫</b>\n\n–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!\n\n<b>–ñ–¥—É —Ç–≤–æ—é –∑–∞–¥–∞—á—É!</b> üöÄ\n\n‚ùï <b>–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∑–∞–ø—Ä–æ—Å—ã</b> üòî", reply_markup=await kb_ai(), parse_mode='HTML')
    else:
        await callback.message.answer(f'ü§ñ <b>–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫</b>\n\n–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!\n\n<b>–ñ–¥—É —Ç–≤–æ—é –∑–∞–¥–∞—á—É!</b> üöÄ\n\n<b>‚ùï –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ {request_count[0]} {("–∑–∞–ø—Ä–æ—Å–æ–≤" if request_count[0] >= 5 else "–∑–∞–ø—Ä–æ—Å–∞") if request_count[0] > 1 else "–∑–∞–ø—Ä–æ—Å"}</b>', reply_markup=await kb_ai(), parse_mode='HTML')
        await state.set_state(AiWait.msg)


@week_with_ai.message(AiWait.msg)
async def week_ai_message(message: Message, state: FSMContext):
    request_count = await get_requests_ai(message.chat.id)

    await message.answer('‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ò–ò –Ω–∞—á–∞–ª –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å (~15 —Å–µ–∫—É–Ω–¥) ')
    await state.set_state(AiWait.wait)

    with suppress(SyntaxWarning):
        text = await generate(message.text) + (f'\n\n*–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –Ω–µ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\!*\n\n‚ùï *–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {request_count[0] - 1} {("–∑–∞–ø—Ä–æ—Å–æ–≤" if (request_count[0] - 1) >= 4 else "–∑–∞–ø—Ä–æ—Å–∞") if (request_count[0] - 1) > 1 else "–∑–∞–ø—Ä–æ—Å"}*' if request_count[0] - 1 != 0 else f'\n\n‚ùï *–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∑–∞–ø—Ä–æ—Å—ã üòî*')

    try:
        await message.answer(text=text, reply_markup=await kb_ai(), parse_mode='MarkdownV2')
    except Exception:
        await message.answer(text=text + '\n\n–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', reply_markup=await kb_ai())
    await state.clear()

    async with async_session() as session:
        stmt = update(User).where(User.tg_id == message.chat.id).values(requests_ai = User.requests_ai - 1)
        await session.execute(stmt)
        await session.commit()

    await logger.info(
        f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id –∏ username: {message.from_user.id} {message.from_user.username} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å: {message.text}')

    if (request_count[0] - 1) != 0:
        await state.set_state(AiWait.msg)


@week_with_ai.message(AiWait.wait)
async def week_ai_message(message: Message, state: FSMContext):
    await message.answer('‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ò–ò –æ–±—Ä–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å')