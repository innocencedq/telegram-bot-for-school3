import hashlib

from aiogram import Router
from aiogram.types import InlineQuery, InlineQueryResultCachedPhoto, InlineQueryResultArticle, InputTextMessageContent

from app.database.requests import get_image

router_inline_mode = Router()


@router_inline_mode.inline_query()
async def inline_inline_query(query: InlineQuery):
    text = query.query.lower()
    result_id: str = hashlib.md5(text.encode('utf-8')).hexdigest()

    if text in ['–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–ø–Ω']:
        week_name = 'monday'
        file_id = await get_image(week_name)

        result = InlineQueryResultCachedPhoto(
            id=result_id,
            photo_file_id=f"{file_id[0]}",
            title="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
            description="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
            caption="üìÜ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫</b>",
            parse_mode='HTML'
        )

        await query.answer(results=[result], cache_time=1, is_personal=True)

    elif text in ['–≤—Ç–æ—Ä–Ω–∏–∫', '–≤—Ç']:
        week_name = 'tuesday'
        file_id = await get_image(week_name)

        result = InlineQueryResultCachedPhoto(
            id=result_id,
            photo_file_id=f"{file_id[0]}",
            title="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫",
            description="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫",
            caption="üìÜ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫</b>",
            parse_mode='HTML'
        )

        await query.answer(results=[result], cache_time=1, is_personal=True)

    elif text in ['—Å—Ä–µ–¥–∞', '—Å—Ä']:
        week_name = 'wednesday'
        file_id = await get_image(week_name)

        result = InlineQueryResultCachedPhoto(
            id=result_id,
            photo_file_id=f"{file_id[0]}",
            title="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—É",
            description="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—É",
            caption="üìÜ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—É</b>",
            parse_mode='HTML'
        )

        await query.answer(results=[result], cache_time=1, is_personal=True)

    elif text in ['—á–µ—Ç–≤–µ—Ä–≥', '—á—Ç']:
        week_name = 'thrusday'
        file_id = await get_image(week_name)

        result = InlineQueryResultCachedPhoto(
            id=result_id,
            photo_file_id=f"{file_id[0]}",
            title="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥",
            description="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥",
            caption="üìÜ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥</b>",
            parse_mode='HTML'
        )

        await query.answer(results=[result], cache_time=1, is_personal=True)

    elif text in ['–ø—è—Ç–Ω–∏—Ü–∞', '–ø—Ç']:
        week_name = 'friday'
        file_id = await get_image(week_name)

        result = InlineQueryResultCachedPhoto(
            id=result_id,
            photo_file_id=f"{file_id[0]}",
            title="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É",
            description="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É",
            caption="üìÜ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É</b>",
            parse_mode = 'HTML'
        )

        await query.answer(results=[result], cache_time=1, is_personal=True)

    elif text in ['–∑–≤–æ–Ω–∫–∏', '–∑–≤', 'zv']:
        week_name = 'calls'
        file_id = await get_image(week_name)

        result = InlineQueryResultCachedPhoto(
            id=result_id,
            photo_file_id=f"{file_id[0]}",
            title="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤",
            description="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤",
            caption="üîî <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤</b>",
            parse_mode = 'HTML'
        )

        await query.answer(results=[result], cache_time=1, is_personal=True)
    else:
        result = InlineQueryResultArticle(
            id=result_id,
            title='–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
            input_message_content=InputTextMessageContent(message_text='‚ùå')
        )
        await query.answer(results=[result], cache_time=1, is_personal=True)
