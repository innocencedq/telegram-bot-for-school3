import datetime
from aiogram import Router, F
from aiogram.types import CallbackQuery, InputMediaVideo, InputMediaPhoto
from aiogram.exceptions import TelegramBadRequest

from app.components.diary.response import get_all_period_marks as all_marks
from app.components.diary.response import get_homework as gh
from app.components.diary.response import get_marks_last_5_days as get_marks
from app.components.keyboard import main_diary_kb, back_to_diary, methods_auth, notify, choose_marks, escape_from_marks
from app.database.requests import get_image


callback_diary = Router()


@callback_diary.callback_query(F.data == 'main_diary')
async def main_diary(callback: CallbackQuery):
    f = await get_image(week_name='diary')
    photo = InputMediaPhoto(media=f, caption='<b>üìî –î–Ω–µ–≤–Ω–∏–∫</b>\n\n', parse_mode='html')
    await callback.message.edit_media(photo, reply_markup=await main_diary_kb(callback.from_user.id))


@callback_diary.callback_query(F.data == 'marks')
async def marks(callback: CallbackQuery):
    try:
        await callback.message.delete()
    except TelegramBadRequest:
        pass
    await callback.message.answer('üóì –ó–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ü–µ–Ω–∫–∏?', reply_markup=choose_marks)


@callback_diary.callback_query(F.data.in_(['auth_android_chrome', 'auth_ios_safari', 'auth_pc']))
async def auth_android_chrome(callback: CallbackQuery):
    if callback.data == 'auth_android_chrome':
        file_id = await get_image('guide_android')
        auth_android = "<b>–í—Ö–æ–¥ —á–µ—Ä–µ–∑ Android (Chrome)</b>\n\n" \
                    """<b>–®–∞–≥ 1:</b> –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –ö–ò–ê–°–£–û –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å <a href="https://pwa.kiasuo.ru/schedule">pwa.kiasuo.ru</a>\n""" \
                    """<pre>javascript:(() => { const a = (JSON.parse(localStorage.getItem("auth-store") || "{}"))?.refreshToken; if (a) { window.location.href = `https://t.me/HelperSchool3bot?start=${a}`; } })();</pre>""" \
                    "<b>–®–∞–≥ 2:</b> –°–æ–∑–¥–∞–π—Ç–µ –∑–∞–∫–ª–∞–¥–∫—É –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–µ –Ω–∞–∂–∞–≤ –Ω–∞ '–ò–∑–º–µ–Ω–∏—Ç—å'\n" \
                    "<b>–®–∞–≥ 3</b>: –í—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –≤–º–µ—Å—Ç–æ –∞–¥—Ä–µ—Å–∞ –∏ –≤—ã–π–¥–∏—Ç–µ –∏–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n" \
                    "<b>–®–∞–≥ 4</b>: –í –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–∞ —Å–∞–π—Ç–µ –≤–≤–µ–¥–∏—Ç–µ '–î–Ω–µ–≤–Ω–∏–∫' –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ –∑–Ω–∞—á–∫–æ–º –∑–≤–µ–∑–¥—ã\n\n" \
                    "<b>–ü–æ—à–∞–≥–æ–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</b>\n" \
                    "<b>–ù–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞ —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –ª–∏—à—å –í–∞—à refreshToken –∏ accessToken, –ø–æ–∑–≤–æ–ª—è—é—â–∏–µ –±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ü–µ–Ω–æ–∫!</b>"
        video = InputMediaVideo(media=file_id, caption=auth_android, parse_mode='HTML')
        await callback.message.edit_media(media=video, reply_markup=back_to_diary, parse_mode='HTML')
    elif callback.data == 'auth_ios_safari':
        file_id = await get_image('guide_ios')
        auth_ios = "<b>–í—Ö–æ–¥ —á–µ—Ä–µ–∑ iOS (Safari)</b>\n\n" \
                    """<b>–®–∞–≥ 1:</b> –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –ö–ò–ê–°–£–û –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å <a href="https://pwa.kiasuo.ru/schedule">pwa.kiasuo.ru</a> (–ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—ã–ª–ª–∫–∏ —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É)\n""" \
                    "<b>–®–∞–≥ 2:</b> –°–æ–∑–¥–∞–π—Ç–µ –∑–∞–∫–ª–∞–¥–∫—É –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–µ, –ø–µ—Ä–µ–π–¥—è –≤ –º–µ–Ω—é –∑–∞–∫–ª–∞–¥–æ–∫\n" \
                    "<b>–®–∞–≥ 3</b>: –í—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –≤–º–µ—Å—Ç–æ –∞–¥—Ä–µ—Å–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ\n" \
                    "<b>–®–∞–≥ 4</b>: –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç —á–µ—Ä–µ–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–∫–ª–∞–¥–∫–∏ –∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\n\n" \
                    "<b>–ü–æ—à–∞–≥–æ–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</b>\n" \
                    "<b>–ù–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞ —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –ª–∏—à—å –í–∞—à refreshToken –∏ accessToken, –ø–æ–∑–≤–æ–ª—è—é—â–∏–µ –±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ü–µ–Ω–æ–∫!</b>"
        video = InputMediaVideo(media=file_id, caption=auth_ios, parse_mode='HTML')
        await callback.message.edit_media(media=video, parse_mode='HTML', reply_markup=notify)
        await callback.message.answer("""javascript:(() => { const a = (JSON.parse(localStorage.getItem("auth-store") || "{}"))?.refreshToken; if (a) { window.location.href = `https://t.me/HelperSchool3bot?start=${a}`; } })();""", reply_markup=back_to_diary)
    elif callback.data == 'auth_pc':
        file_id = await get_image('guide_pc')
        auth_pc = "<b>–í—Ö–æ–¥ —á–µ—Ä–µ–∑ –ü–ö</b>\n\n" \
                    """<b>–®–∞–≥ 1:</b> –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –ö–ò–ê–°–£–û –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å <a href="https://pwa.kiasuo.ru/schedule">pwa.kiasuo.ru</a>\n""" \
                    """<pre>(() => { const a = (JSON.parse(localStorage.getItem("auth-store") || "{}"))?.refreshToken; if (a) { window.location.href = `https://t.me/HelperSchool3bot?start=${a}`; } })();</pre>""" \
                    "<b>–®–∞–≥ 2:</b> –ó–∞–π–¥–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –≤—Å—Ç–∞–≤–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å (–ü–ö–ú -> –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∫–æ–¥ -> Console (–ö–æ–Ω—Å–æ–ª—å) -> –≤ –∫–æ–Ω—Å–æ–ª–∏ allow pasting)\n" \
                    "<b>–®–∞–≥ 3</b>: –í—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –Ω–∞–∂–º–∏—Ç–µ Enter\n" \
                    "<b>–®–∞–≥ 4</b>: –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É –í–∞—Å –ø–æ—è–≤–∏—Ç—å—Å—è –º–∞–ª–µ–Ω—å–∫–æ–µ –æ–∫–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–∫—Ä—ã—Ç—å —Å –ø–æ–º–æ—â—å—é Telegram'\n\n" \
                    "<b>–ü–æ—à–∞–≥–æ–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</b>\n" \
                    "<b>–ù–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞ —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –ª–∏—à—å –í–∞—à refreshToken –∏ accessToken, –ø–æ–∑–≤–æ–ª—è—é—â–∏–µ –±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ü–µ–Ω–æ–∫!</b>"
        video = InputMediaVideo(media=file_id, caption=auth_pc, parse_mode='HTML')
        await callback.message.edit_media(media=video, reply_markup=back_to_diary, parse_mode='HTML')
        

@callback_diary.callback_query(F.data == 'get_homework')
async def get_homework(callback: CallbackQuery):
    try:
        try:
            await callback.message.delete()
        except TelegramBadRequest:
            pass

        await callback.message.answer('‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∑–∞–≥—Ä—É–∂–∞—é –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è‚Ä¶ (~5 —Å–µ–∫—É–Ω–¥)')
        today = datetime.date.today()
        homework_data = await gh(callback.from_user.id)
        response_text = (
            "<b>üìñ –ó–∞–¥–∞–Ω–Ω—ã–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è</b>\n\n"
        )
        number = 0

        for subjects in homework_data['subjects']:
            subject = subjects['subject']

            homework_text = None
            homework_check_at = None
            for homework in subjects['homework']:
                if 'text' in homework:
                    homework_text = homework['text']
                    homework_check_at = homework['check_at']

            subject_text = ()
            if homework_check_at:
                format_date = datetime.datetime.strptime(homework_check_at, "%Y-%m-%d").date()
                if format_date >= today:
                    split_date = {
                        "monday": "–ø–Ω",
                        "tuesday": "–≤—Ç",
                        "wednesday": "—Å—Ä",
                        "thursday": "—á—Ç",
                        "friday": "–ø—Ç"
                    }
                    if homework_text not in response_text:
                        number += 1
                        subject_text = (
                            f"<b>{number}. {subject}</b>\n"
                            f"‚îú <code>{homework_text}</code>\n"
                            f"‚îî –ü—Ä–æ–≤–µ—Ä–∫–∞ <b>{format_date.strftime('%d.%m')} ({'—Å–µ–≥–æ–¥–Ω—è' if format_date == today else split_date[format_date.strftime('%A').lower()]})</b>\n\n"
                        )

            response_text += subject_text if subject_text else ""
        
        await callback.message.edit_text(text=response_text + "\n<b>–û–±—Ä–∞—â–∞–π –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–∞—Ç—É –ø—Ä–æ–≤–µ—Ä–∫–∏!</b>", parse_mode='HTML', reply_markup=back_to_diary)
    except Exception as e:
        print(e)
        await callback.message.edit_text(text="‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é.", reply_markup=back_to_diary)


@callback_diary.callback_query(F.data == 'check_marks')
async def marks_last_5_days(callback: CallbackQuery):
    try:
        await callback.message.edit_text('‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∑–∞–≥—Ä—É–∂–∞—é –æ—Ü–µ–Ω–∫–∏‚Ä¶ (~5 —Å–µ–∫—É–Ω–¥)')
        marks_data = await get_marks(callback.from_user.id)
        
        response_text = (
            f"üìä <b>–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –¥–Ω–µ–π</b>\n"
            f"üìÖ {marks_data['date_from']} - {marks_data['date_to']}\n\n"
        )
        

        for subject in marks_data['subjects']:
            subject_text = (
                f"<b>{subject['number']}. {subject['subject']}</b>\n"
                f"‚îú –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: <b>{subject['average_mark'] or '‚Äî'}</b> <b>{subject['average_status']}</b>\n"
            )
            
            if subject['has_marks_last_5_days']:
                marks_lines = []
                for day in subject['marks']:
                    marks_str = ", ".join(day['marks'])
                    marks_lines.append(f"‚îÇ  <b>{day['date']}: {marks_str}</b>")
                
                subject_text += "‚îú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏:\n" + "\n".join(marks_lines) + "\n"
            else:
                subject_text += f"‚îî –ù–µ—Ç –æ—Ü–µ–Ω–æ–∫ –∑–∞ 5 –¥–Ω–µ–π\n"
            
            response_text += subject_text + "\n"
        
        await callback.message.edit_text(text=response_text, reply_markup=escape_from_marks, parse_mode="HTML")
        
    except Exception as e:
        await callback.message.edit_text(text="‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ü–µ–Ω–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é.", reply_markup=back_to_diary)


@callback_diary.callback_query(F.data == 'get_all_marks')
async def get_all_period_marks(callback: CallbackQuery):
    try:
        await callback.message.edit_text('‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∑–∞–≥—Ä—É–∂–∞—é –æ—Ü–µ–Ω–∫–∏‚Ä¶ (~5 —Å–µ–∫—É–Ω–¥)')
        marks_data = await all_marks(callback.from_user.id)

        response_text = (
            f"üìä <b>–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å –∑–∞ —Ç–µ–∫—É—â—É—é —á–µ—Ç–≤–µ—Ä—Ç—å/–ø–æ–ª—É–≥–æ–¥–∏–µ</b>\n\n"
        )
        
        total_marks = 0
        excellent_subjects = 0
        good_subjects = 0
        bad_subjects = 0

        for subject in marks_data['subjects']:
            if subject['rounded_mark'] == 5:
                excellent_subjects += 1
            elif subject['rounded_mark'] == 4:
                good_subjects += 1
            elif subject['rounded_mark'] in (2, 3):
                bad_subjects += 1
            
            subject_text = (
                f"<b>{subject['number']}. {subject['subject']}</b>\n"
                f"‚îú –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: <b>{subject['average_mark'] or '‚Äî'}</b> <b>{subject['average_status']}</b>\n"
            )
            
            if subject['has_marks']:
                marks_lines = []
                for day in subject['marks']:
                    marks_str = ", ".join(day['marks'])
                    total_marks += len(day['marks'])
                marks_lines.append(f"‚îî  <b>{marks_str}</b>")
                
                subject_text += "‚îú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏:\n" + "\n".join(marks_lines) + "\n"
            else:
                subject_text += f"‚îî –ù–µ—Ç –æ—Ü–µ–Ω–æ–∫\n"

            response_text += subject_text + "\n"
        
        
        response_text += (
            f"<b>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
            f"‚Ä¢ –ü–æ–ª—É—á–µ–Ω–æ –æ—Ü–µ–Ω–æ–∫: {total_marks}\n"
            f"‚Ä¢ –û—Ç–ª–∏—á–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (5): {excellent_subjects}\n"
            f"‚Ä¢ –•–æ—Ä–æ—à–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (4): {good_subjects}\n"
            f"‚Ä¢ –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (2-3): {bad_subjects}\n\n"
        )
        
        if bad_subjects == 0 and good_subjects != 0:
            motivation = f"–î–æ –æ—Ç–ª–∏—á–Ω–∏–∫–∞ –æ—Å—Ç–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ {good_subjects} {'–ø—Ä–µ–¥–º–µ—Ç!' if good_subjects == 1 else '–ø—Ä–µ–¥–º–µ—Ç–∞!' if good_subjects == 2 or good_subjects <= 4 else '–ø—Ä–µ–¥–º–µ—Ç–æ–≤!' if good_subjects >= 5 else '–ø—Ä–µ–¥–º–µ—Ç–æ–≤!'}"
        elif bad_subjects == 0 and good_subjects == 0:
            motivation = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –æ—Ç–ª–∏—á–Ω–∏–∫!"
        elif bad_subjects <= 6:
            motivation = f"–¢—ã –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞—Ä–Ω–∏–∫! –û—Å—Ç–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–≥–æ {bad_subjects} {'–ø—Ä–µ–¥–º–µ—Ç!' if bad_subjects == 1 else '–ø—Ä–µ–¥–º–µ—Ç–∞!' if bad_subjects == 2 or bad_subjects <= 4 else '–ø—Ä–µ–¥–º–µ—Ç–æ–≤!' if bad_subjects >= 5 else '–ø—Ä–µ–¥–º–µ—Ç–æ–≤!'}"
        else:
            motivation = f""
        
        response_text += motivation
        
        await callback.message.edit_text(text=response_text, reply_markup=escape_from_marks, parse_mode="HTML")
        
    except Exception:
        await callback.message.edit_text(text="‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ü–µ–Ω–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é.", reply_markup=back_to_diary)


@callback_diary.callback_query(F.data == 'methods_auth')
async def methods(callback: CallbackQuery):
    await callback.message.edit_text('–°–ø–æ—Å–æ–±—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏', reply_markup=methods_auth)